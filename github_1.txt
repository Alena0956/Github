JSON
 4. Создать внешний репозиторий c названием JSON.
    Открыть GitHub в браузере, создать репозиторий
 5. Клонировать репозиторий JSON на локальный компьютер.
    git clone 'скопированный URL'
 6. Внутри локального JSON создать файл “new.json”.
    cd JSON
    touch JSON/new.json
 7. Добавить файл под гит.
    git add new.json
 8. Закоммитить файл.
    git commit -m 'Added new file'
 9. Отправить файл на внешний GitHub репозиторий.
    git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
    nano new.json, ctrl+x
 11. Отправить изменения на внешний репозиторий.
     git add new.json
     git commit -m 'Data edited'
     git push
 12. Создать файл preferences.json
     touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
     nano preferences.json, ctrl+x
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
     nano sklls.json, ctrl+x
 15. Отправить сразу 2 файла на внешний репозиторий.
     git add preferences.json sklls.json
     git commit -m 'Added information about preferences and skills'
     git push
 16. На веб интерфейсе создать файл bug_report.json.
     create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
     edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
     git pull


XML
 21. Создать внешний репозиторий c названием XML.
     Открыть GitHub в браузере, создать репозиторий
 22. Клонировать репозиторий XML на локальный компьютер.
     git clone 'скопированный URL'
 23. Внутри локального XML создать файл “new.xml”.
     cd XML
     touch new.xml
 24. Добавить файл под гит.
     git add new.xml
 25. Закоммитить файл.
     git commit -m 'Added new empty file'
 26. Отправить файл на внешний GitHub репозиторий.
     git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
     nano new.xml, ctrl+x
 28. Отправить изменения на внешний репозиторий.
     git add new.xml
     git commit -m 'Added information about me'
     git push
 29. Создать файл preferences.xml
     touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
     nano preferences.xml, ctrl+x
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
     cat > sklls.xml, ctrl+c
 32. Сделать коммит в одну строку.
     git add preferences.xml sklls.xml
     git commit -m 'Added information about preferences and skills'
 33. Отправить сразу 2 файла на внешний репозиторий.
     git push
 34. На веб интерфейсе создать файл bug_report.xml.
     create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
     edit this file
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit changes
 38. Синхронизировать внешний и локальный репозиторий XML
     git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
    Открыть GitHub в браузере, создать репозиторий
 2. Клонировать репозиторий TXT на локальный компьютер.
    git clone 'скопированный URL'
 3. Внутри локального TXT создать файл “new.txt”.
    touch new.txt
 4. Добавить файл под гит.
    git add new.txt
 5. Закоммитить файл.
    git commit -m 'Added new empty file'
 6. Отправить файл на внешний GitHub репозиторий.
    git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
    cat >> new.txt, ctrl+c
 8. Отправить изменения на внешний репозиторий.
    git add new.txt
    git commit -m 'Added information about me'
    git push
 9. Создать файл preferences.txt
    cat preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
    cat >> preferences.txt, ctrl+c
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
    cat > sklls.txt, ctrl+c
 12. Сделать коммит в одну строку.
     git add preferences.txt sklls.txt
     git commit -m 'Added information about preferences and skills'
 13. Отправить сразу 2 файла на внешний репозиторий.
     git push
 14. На веб интерфейсе создать файл bug_report.txt.
     create new file bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
     edit this file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT
     git pull
